@model IEnumerable<Ingredient>

<div class="row mb-4">
    <div class="col-md-6">
        <form asp-action="Index" method="get" class="form-inline">
            <div class="input-group">
                <input type="text" class="form-control" name="searchTerm"
                       value="@ViewData["CurrentFilter"]" placeholder="Search ingredients..." id="ingredientSearch" />
                <div class="input-group-append">
                    <button class="btn btn-outline-secondary" type="submit">Search</button>
                    <a asp-action="Index" class="btn btn-outline-secondary">Clear</a>
                </div>
            </div>
        </form>
    </div>
</div>

<table class="table table-hover">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSort"]">Name</a>
            </th>
            <th>Unit</th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["StockSort"]">Current Stock</a>
            </th>
            <th>Minimum Level</th>
            <th>Status</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            var isLowStock = item.MinimumStockLevel.HasValue && item.CurrentStock < item.MinimumStockLevel;
            <tr class="text-center @(isLowStock ? "table-warning" : "")">
                <td class="text-start">@item.Name</td>
                <td>@item.UnitOfMeasure</td>
                <td>
                    @item.CurrentStock
                    @if (item.MinimumStockLevel.HasValue)
                    {
                        var percent = Math.Min(100, (int)(item.CurrentStock * 100.0m / item.MinimumStockLevel.Value));
                        var progressClass = percent < 100 ? "bg-danger" : "bg-success";

                        <div class="progress mt-1" style="height: 20px;">
                            <div class="progress-bar @progressClass" role="progressbar"
                                 style="width: @percent%" aria-valuenow="@percent" aria-valuemin="0" aria-valuemax="100">
                                @percent%
                            </div>
                        </div>
                    }
                </td>
                <td>@(item.MinimumStockLevel.HasValue? item.MinimumStockLevel.ToString() : "N/A")</td>
                <td>
                    @if (isLowStock)
                    {
                        <span class="badge bg-danger">Low Stock</span>
                    }
                    else
                    {
                        <span class="badge bg-success">OK</span>
                    }
                </td>
                <td>
                    <a asp-action="StockUpdate" asp-route-id="@item.IngredientId" class="btn btn-sm btn-outline-primary me-1">
                        Update
                    </a>
                    <a asp-action="Edit" asp-route-id="@item.IngredientId" class="btn btn-sm btn-outline-secondary">
                        Edit
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>
        $(function() {
            // Autocomplete for search
            $("#ingredientSearch").autocomplete({
                source: '@Url.Action("Search", "Ingredients")',
                minLength: 2,
                select: function(event, ui) {
                    window.location.href = '@Url.Action("Edit", "Ingredients")/' + ui.item.id;
                }
            });
        });
    </script>
}
